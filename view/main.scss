@function stripes($angle, $color-1, $color-2, $spacing) {
  // 1 physical pixel transition for antialiased edges
  @return repeating-linear-gradient($angle, $color-1, $color-1 calc(#{$spacing} - var(--physical-pixel)), $color-2 $spacing, $color-2 calc(#{$spacing * 2} - var(--physical-pixel)), $color-1 $spacing * 2);
//@return repeating-linear-gradient($angle, $color-1, $color-1 $spacing, $color-2 $spacing, $color-2 $spacing * 2);
}

// Fonts
  $font-family: Arial, sans-serif;
  $font-size: 13.33334px;
// Colors
  $text-color: black;
  $white-text-color: white;
  $border-color: black;
  $grid-line-color: rgba(0,0,0,0.15);
// Lengths
  $cell-padding: 0 0.25rem;
  $border-width: 1px;
  $slot-height: 1.5rem;
// Images
  $pin-stripe: stripes(-45deg, rgba(255,255,255,0.1), rgba(0,0,0,0.1), 8px);
// Convenience
  $border-style: $border-width solid $border-color;

@mixin heading {
  h1, h2, h3, h4, h5, h6 {
    @content;
  }
}

@include heading {
  font-size: 1em;
  font-weight: bold;
  line-height: normal;
  margin: 0;
}

body {
  margin: 0;
  padding: 8px;
  min-height: calc(100vh - 16px);
  
  --physical-pixel: 1px;
}

menu {
  display: none;
}

.white-text {
  color: $white-text-color;
}

input[type="color"] {
  margin: 0;
  border: none;
  padding: 0;
  
  width: 1em;
  height: 1em;
  
  vertical-align: middle;
  
  &::-moz-focus-inner {
    padding: 0;
    border: none;
  }
  
  &::-webkit-color-swatch-wrapper {
    padding: 0;
  }
}

html {
  font-family: $font-family;
  font-size: $font-size;
}

.inputs {
  margin-bottom: 1em;
  
  label {
    line-height: 1.5;
  }
  
  input {
    font-size: 1em;
    color: black;
    
    &[type="number"], &[type="time"] {
      width: 3em;
    }
  }
  
  > div {
    margin: 1em 0;
  }
  
  %horizontal-piece {
    display: inline-block;
    vertical-align: top;
    margin: 0;
    padding: 0;
  }
  
  %listing {
    @extend %horizontal-piece;
    
    list-style: none;
    
    li {
      display: block;
      margin: 0;
      border: $border-style;
      border-top: none;
      padding: 0.5em;
      
      line-height: 1.5;
      overflow: hidden;
      
      &:first-child {
        border-top: $border-style;
      }
    }
  }
  
  .activities {
    @extend %listing;
    
    width: 20rem;
    
    li .controls {
      float: right;
    }
  }
  
  .patterns {
    @extend %listing;
    
    li {
      &:nth-child(even) {
        background-color: #eee;
      }
      
      &.selected {
        background-color: #26d;
        color: $white-text-color;
      }
    }
  }
  
  .pattern {
    @extend %horizontal-piece;
    
    .slots {
      @extend %listing;
      
      counter-reset: pattern-slot;
      
      li::before {
        counter-increment: pattern-slot;
        content: counter(pattern-slot) '. ';
      }
      
      li.non-optional {
        position: relative;
        z-index: 0;
        
        &::after {
          content: '';
          z-index: -1;
          position: absolute;
          left: 0; right: 0;
          top: 0; bottom: 0;
          background-image: $pin-stripe;
        }
      }
    }
    
    .requires-excludes {
      display: inline-block;
    }
  }
}

%no-select {
  /* http://stackoverflow.com/a/4407335/5482384 */
  
  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Chrome/Safari/Opera */
     -khtml-user-select: none; /* Konqueror */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none;
}

%column {
  //@extend %no-select;
  
  position: relative;
  list-style: none;
  
  display: inline-block;
  height: calc(#{$slot-height} * var(--day-length) - #{$border-width});
  margin: 0;
  padding: 0;
  vertical-align: bottom;
  
  li {
    position: absolute;
    top: calc(var(--slot-index) * #{$slot-height});
    left: 0; right: 0;
    padding: $cell-padding;
  }
  
  &::after {
    /* grid lines. also captures clicks. */
    
    content: '';
    display: block;
    position: absolute;
    left: 0; right: 0;
    top: 0; bottom: 0;
    
    background-image: linear-gradient(to top, $grid-line-color, $grid-line-color $border-width, transparent $border-width, transparent);
    background-size: 1px $slot-height;
    background-repeat: repeat;
  }
}

.timespan {
  white-space: nowrap;
  
  line-height: $slot-height;
  
  .hours {
    @extend %column;
    @extend %no-select;
    
    min-width: 2.5rem;
    
    border: $border-style;
    margin-right: -1px;
    overflow: hidden;
    
    background-color: #eee;
    
    text-align: right;
    
    li {
      background-color: white;
      
      &::after {
        /* hack to shrink the element vertically by $border-width so it will
           fit between the grid lines. */
        content: '';
        display: block;
        margin-bottom: -$border-width;
      }
    }
  }
  
  .day {
    display: inline-block;
    min-width: 5.5rem;
    
    border: $border-style;
    border-bottom: none;
    margin-right: -1px;
    
    + .hours {
      text-align: left;
    }
    
    > :first-child {
      /* the heading is the first child. :P */
      
      border-bottom: $border-style;
      overflow: hidden;
      text-align: center;
      
      /* make sure it's always exactly one line tall. for bonus points, do so
         in the worst way possible. */
      white-space: nowrap;
      &::after {
        /* see, this will prevent vertical collapsing when there's no text. */
        content: '';
        display: inline-block;
      }
    }
    
    .slots {
      @extend %column;
      
      border-bottom: $border-style;
      width: 100%;
      overflow: hidden;
      
      li {
        height: 100%;
        
        border-top: $border-style;
        /* border should sit on top instead of pushing everything down. */
        margin-top: -$border-width;
        
        /* establish a new stacking context. */
        z-index: 0;
        
        span {
          display: block;
          padding: $cell-padding;
          
          position: absolute;
          left: 0; right: 0;
          
          &.activity {
            text-align: left;
            top: 0;
            
            /* cover up the duration if there's only one slot. */
            z-index: 1;
            background-color: inherit;
          }
          
          &.duration {
            text-align: right;
            /* (day length - slot length) * slot height */
            bottom: calc((var(--day-length) - var(--slot-length)) * #{$slot-height});
          }
        }
      }
      
      &.selection::before {
        content: '';
        display: block;
        background-color: rgba(255, 255, 255, 0.35);
        position: absolute;
        left: 0; right: 0;
        top: calc(var(--selection-start) * #{$slot-height});
        height: calc(var(--selection-length) * #{$slot-height} - 1px);
        z-index: 1;
      }
    }
  }
  
  .spacer {
    display: block;
    height: 0.5em;
  }
}
